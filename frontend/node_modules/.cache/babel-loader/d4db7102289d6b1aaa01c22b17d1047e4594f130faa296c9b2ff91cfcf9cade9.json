{"ast":null,"code":"var _jsxFileName = \"/home/evanio/Documents/School/web/React/record_app/record-app/src/components/AlbumForm.jsx\",\n  _s = $RefreshSig$();\n// Importing React Hooks\nimport { useState, useContext, useEffect } from 'react';\n\n// Importing components\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport AlbumContext from '../context/AlbumContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlbumForm = () => {\n  _s();\n  // states for the form input fields\n  const [album, setAlbum] = useState('');\n  const [artist, setArtist] = useState('');\n  const [genre, setGenre] = useState('');\n  const [year, setYear] = useState('');\n\n  // other states for the form\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const {\n    addAlbum,\n    albumEdit,\n    updateAlbum\n  } = useContext(AlbumContext);\n  useEffect(() => {\n    if (albumEdit.edit === true) {\n      setBtnDisabled(false);\n      setAlbum(albumEdit.item.album);\n      setArtist(albumEdit.item.artist);\n      setGenre(albumEdit.item.genre);\n      setYear(albumEdit.item.year);\n    }\n  }, [albumEdit]);\n  const handleTextChange = e => {\n    switch (e.target.placeholder) {\n      case 'Album Name':\n        setAlbum(e.target.value);\n        break;\n      case 'Artist Name':\n        setArtist(e.target.value);\n        break;\n      case 'Genre':\n        setGenre(e.target.value);\n        break;\n      case 'Release Year':\n        setYear(e.target.value);\n        break;\n      default:\n        break;\n    }\n    if (album.trim() === '' || artist.trim() === '' || genre.trim() === '' || year.trim() === '') {\n      setBtnDisabled(true);\n      setMessage(null);\n    } else if (validateYear(Number(year)) === false) {\n      setBtnDisabled(true);\n      setMessage('Please enter a valid release year (1900-Current Year)');\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n  };\n  const validateYear = year => {\n    const max = new Date().getFullYear();\n    const isYearValid = !isNaN(year) && year >= 1900 && year <= max;\n    return isYearValid;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newAlbum = {\n      album,\n      artist,\n      genre,\n      year\n    };\n    if (albumEdit.edit === true) {\n      updateAlbum(albumEdit.item.id, newAlbum);\n      setMessage('Album updated successfully');\n    } else {\n      addAlbum(newAlbum);\n      setMessage('Album added successfully');\n    }\n    resetInputFields();\n    setBtnDisabled(true);\n  };\n  const resetInputFields = () => {\n    setAlbum('');\n    setArtist('');\n    setGenre('');\n    setYear('');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Collection Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleTextChange,\n            type: \"text\",\n            placeholder: \"Album Name\",\n            value: album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleTextChange,\n            type: \"text\",\n            placeholder: \"Artist Name\",\n            value: artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleTextChange,\n            type: \"text\",\n            placeholder: \"Genre\",\n            value: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleTextChange,\n            type: \"text\",\n            placeholder: \"Release Year\",\n            value: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"input-btn\",\n          type: \"submit\",\n          version: \"secondary\",\n          isDisabled: btnDisabled,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumForm, \"CpykkqlI1iyg4oQcgEUFk8Ro41c=\");\n_c = AlbumForm;\nexport default AlbumForm;\nvar _c;\n$RefreshReg$(_c, \"AlbumForm\");","map":{"version":3,"names":["useState","useContext","useEffect","Card","Button","AlbumContext","jsxDEV","_jsxDEV","AlbumForm","_s","album","setAlbum","artist","setArtist","genre","setGenre","year","setYear","btnDisabled","setBtnDisabled","message","setMessage","addAlbum","albumEdit","updateAlbum","edit","item","handleTextChange","e","target","placeholder","value","trim","validateYear","Number","max","Date","getFullYear","isYearValid","isNaN","handleSubmit","preventDefault","newAlbum","id","resetInputFields","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","type","version","isDisabled","_c","$RefreshReg$"],"sources":["/home/evanio/Documents/School/web/React/record_app/record-app/src/components/AlbumForm.jsx"],"sourcesContent":["// Importing React Hooks\nimport { useState, useContext, useEffect } from 'react'\n\n// Importing components\nimport Card from './shared/Card'\nimport Button from './shared/Button'\nimport AlbumContext from '../context/AlbumContext'\n\nconst AlbumForm = () => {\n  // states for the form input fields\n  const [album, setAlbum] = useState('')\n  const [artist, setArtist] = useState('')\n  const [genre, setGenre] = useState('')\n  const [year, setYear] = useState('')\n\n  // other states for the form\n  const [btnDisabled, setBtnDisabled] = useState(true)\n  const [message, setMessage] = useState('')\n\n  const { addAlbum, albumEdit, updateAlbum } = useContext(AlbumContext)\n\n  useEffect(() => {\n    if (albumEdit.edit === true) {\n      setBtnDisabled(false)\n      setAlbum(albumEdit.item.album)\n      setArtist(albumEdit.item.artist)\n      setGenre(albumEdit.item.genre)\n      setYear(albumEdit.item.year)\n    }\n  }, [albumEdit])\n\n  const handleTextChange = (e) => {\n\n    switch (e.target.placeholder) {\n      case 'Album Name':\n        setAlbum(e.target.value)\n        break\n      case 'Artist Name':\n        setArtist(e.target.value)\n        break\n      case 'Genre':\n        setGenre(e.target.value)\n        break\n      case 'Release Year':\n        setYear(e.target.value)\n        break\n      default:\n        break\n    }\n\n    if (album.trim() === '' || artist.trim() === '' || genre.trim() === '' || year.trim() === '' ) {\n      setBtnDisabled(true)\n      setMessage(null)\n    } else if (validateYear(Number(year)) === false) {\n      setBtnDisabled(true)\n      setMessage('Please enter a valid release year (1900-Current Year)')\n    } else {\n      setMessage(null)\n      setBtnDisabled(false)\n    }\n\n\n  }\n\n  const validateYear = (year) => {\n    const max = new Date().getFullYear()\n    const isYearValid = !isNaN(year) && year >= 1900 && year <= max\n\n    return isYearValid\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const newAlbum = {\n      album,\n      artist,\n      genre,\n      year,\n    }\n\n    if (albumEdit.edit === true) {\n      updateAlbum(albumEdit.item.id, newAlbum)\n      setMessage('Album updated successfully')\n    } else {\n      addAlbum(newAlbum)\n      setMessage('Album added successfully')\n    }\n\n    resetInputFields()\n    setBtnDisabled(true)\n  }\n\n  const resetInputFields = () => {\n    setAlbum('')\n    setArtist('')\n    setGenre('')\n    setYear('')\n  }\n\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>Collection Editor</h2>\n        <div className='input-group'>\n          <div className='input-fields'>\n            <input\n              onChange={handleTextChange}\n              type='text'\n              placeholder='Album Name'\n              value={album}\n            />\n            <input\n              onChange={handleTextChange}\n              type='text'\n              placeholder='Artist Name'\n              value={artist}\n            />\n            <input\n              onChange={handleTextChange}\n              type='text'\n              placeholder='Genre'\n              value={genre}\n            />\n            <input\n              onChange={handleTextChange}\n              type='text'\n              placeholder='Release Year'\n              value={year}\n            />\n            {/* // <YearInput placeholder={'Release Year'} /> */}\n          </div>\n\n          <Button\n            className='input-btn'\n            type='submit'\n            version='secondary'\n            isDisabled={btnDisabled}\n          >\n            send\n          </Button>\n        </div>\n\n        {message && <div className='message'>{message}</div>}\n      </form>\n    </Card>\n  )\n}\nexport default AlbumForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}